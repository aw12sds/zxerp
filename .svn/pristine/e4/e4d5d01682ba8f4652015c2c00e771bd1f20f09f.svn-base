var store;
var grid;
var zx_car_apply_status;
var zx_car_apply_type;
var lc_process_status_combo;
Ext.onReady(function(){
	
	lc_process_status_combo = Ext.create('Ext.data.SimpleStore',{ 
        fields:['value','text'],  
        data:[["yes","同意"],["no","驳回"],["2","已关闭"]]
	});
	//状态下拉框数据
	zx_car_apply_status = new Ext.data.Store({
		singleton:true, 
		proxy:new Ext.data.HttpProxy( { 
			url:'../xtDataDictionaryController/getXtDataDictionaryByKey?key=zx_car_apply_status',
			reader:new Ext.data.JsonReader({
				root:'items',
				type:'json'
			})
		}),
		fields:['xt_data_dictionary_value', 'xt_data_dictionary_name'],
		autoLoad:true,
		listeners:{
	      'load': function(store, records, options) {
	          store.insert(0, Ext.create('Ext.data.Store',{xt_data_dictionary_id:'',xt_data_dictionary_name:'请选择'}));
	       }
		}
	});

	//类型下拉框数据
	zx_car_apply_type = new Ext.data.Store({
		singleton:true, 
		proxy:new Ext.data.HttpProxy( { 
			url:'../xtDataDictionaryController/getXtDataDictionaryByKey?key=zx_car_apply_type',
			reader:new Ext.data.JsonReader({
				root:'items',
				type:'json'
			})
		}),
		fields:['xt_data_dictionary_value', 'xt_data_dictionary_name'],
		autoLoad:true,  
		listeners:{
	      'load': function(store, records, options) {
	          store.insert(0, Ext.create('Ext.data.Store',{xt_data_dictionary_id:'',xt_data_dictionary_name:'请选择'}));
	       }
		}
	});
	
	/**查询区域可扩展**/
	var items = Ext.create('Ext.FormPanel',{
		xtype:'form',
		maxHeight:150,
		waitMsgTarget:true,
		defaultType:'textfield',
		autoScroll:true,
		fieldDefaults:{
			labelWidth:70,
			labelAlign:'left',
			flex:1,
			margin:'2 5 4 5'
		},
		layout:'column',
		items:[
		{
			layout:'table',
			xtype:'form',
			items:[
			{
				fieldLabel:'申请时间',
				xtype:'datefield',
				labelWidth:70,
				format:'Y-m-d',
				id:'apply_time_st',
				name:'apply_time_st',
				labelAlign:'left'
			},
			{
				fieldLabel:'至',
				xtype:'datefield',
				labelWidth:15,
				format:'Y-m-d',
				id:'apply_time_et',
				name:'apply_time_et',
				labelAlign:'center'
			}
			]
		},
		{
			fieldLabel:'状态',
			xtype:"combo",
			queryMode:'local', 
			store:zx_car_apply_status,
			triggerAction:"all",
            editable:false,
			readonly:true,
            emptyText:'请选择',
            valueField:"xt_data_dictionary_value",
            displayField:"xt_data_dictionary_name",
            id:'state',
			name:'state',
			anchor:'20%',
			labelAlign:'left'
		}
		]
	});
	initSearchForm('north',items,false,'left');
	
	store = getGridJsonStore('../zxCarApplyController/getZxCarApplyListByCondition',[]);
	grid = Ext.create('Ext.grid.Panel',{
		region:'center',
		xtype:'panel',
		store:store,
		title:'查询结果',
		columnLines:true,
		selType:'cellmodel',
		multiSelect:true,
		selType:'checkboxmodel',
		viewConfig:{
			emptyText:'暂无数据',
			stripeRows:true
		},
		loadMask:{
			msg:'正在加载...'
		},
		columns:[
			{
				header:'序号',
				width:77,
				xtype:'rownumberer'
			},
			{
				header:'Id',
				flex:1,
				hidden:true,
				dataIndex:'id'
			},
			{
				header:'状态',
				flex:1,
				dataIndex:'state',
				renderer:function(value){
					return initComBoData(zx_car_apply_status,value,'xt_data_dictionary_value', 'xt_data_dictionary_name');
				}
			},
			{
				header:'类型',
				flex:1,
				dataIndex:'apply_type',
				renderer:function(value){
					return initComBoData(zx_car_apply_type,value,'xt_data_dictionary_value', 'xt_data_dictionary_name');
				}
			},
			{
				header:'申请人标识',
				flex:1,
				hidden:true,
				dataIndex:'apply_user_id'
			},
			{
				header:'司机标识',
				flex:1,
				hidden:true,
				dataIndex:'driver_id'
			},
			{
				header:'车辆Id',
				flex:1,
				hidden:true,
				dataIndex:'car_id'
			},
			{
				header:'申请车辆',
				flex:1,
				dataIndex:'item',
				renderer:function(value){
					if(null != value){
						return value.car_no;
					}else{
						return '';
					}
				}
			},
			{
				header:'申请时间',
				flex:1,
				dataIndex:'apply_time'
			},
			{
				header:'申请用车时间始',
				flex:1,
				dataIndex:'apply_time_begin'
			},
			{
				header:'申请用车时间末',
				flex:1,
				dataIndex:'apply_time_end'
			},
			{
				header:'目的地点',
				flex:1,
				dataIndex:'apply_car_address'
			},
			{
				header:'操作',
				columns:[
				{
					header:'查看审批记录',
					align:'center',
					xtype:'widgetcolumn',
					widget:{
		                xtype:'button',
		                text:'审批记录',
		                handler:function(rec){	
		  					var id = rec.getWidgetRecord().data.id;
		  					var status = rec.getWidgetRecord().data.state;
		  					initLcApprovalWin(id,status);
					    }
		            }
				},
				{
					header:'出车',
					align:'center',
					xtype:'widgetcolumn',
					widget:{
		                xtype:'button',
		                text:'出车',
		                handler:function(rec){	
		  					var id = rec.getWidgetRecord().data.id;
		  					var status = rec.getWidgetRecord().data.state;
		  					var apply_user_id = rec.getWidgetRecord().data.apply_user_id;
		  					carOut(id,status,apply_user_id);
					    }
		            }
				},
				{
					header:'回司',
					align:'center',
					xtype:'widgetcolumn',
					widget:{
		                xtype:'button',
		                text:'回司',
		                handler:function(rec){	
		  					var id = rec.getWidgetRecord().data.id;
		  					var status = rec.getWidgetRecord().data.state;
		  					var apply_user_id = rec.getWidgetRecord().data.apply_user_id;
		  					carBack(id,status,apply_user_id);
					    }
		            }
				}
				]
			}
		],
		tbar:[
			 {
				text:'添加',
				tooltip:'添加',
				minWidth:tbarBtnMinWidth,
				cls:'addBtn',
				icon:addIcon,
				handler:function(){
					addZxCarApply();
				}
			 },
			 {
				text:'编辑',
				tooltip:'编辑',
				minWidth:tbarBtnMinWidth,
				cls:'updateBtn',
				icon:editIcon,
				handler:function(){
					updateZxCarApply();
				}
			 },
			 {
				text:'删除',
				tooltip:'删除',
				minWidth:tbarBtnMinWidth,
				cls:'delBtn',
				icon:delIcon,
				handler:function(){
					delZxCarApply();
				}
			 },
			 {
				text:'检索',
				minWidth:tbarBtnMinWidth,
				cls:'searchBtn',
				icon:searchIcon,
				handler:function(){
					search();
				}
			 },
			 {
				text:'重置',
				tooltip:'重置',
				minWidth:tbarBtnMinWidth,
				icon:clearSearchIcon,
				handler:function(){
					searchForm.reset();
				}
			 },
			 {
				text:'申请',
				tooltip:'申请',
				minWidth:tbarBtnMinWidth,
				cls:'addBtn',
				icon:addIcon,
				handler:function(){
					applyZxCar();
				}
			 },
			 grid_toolbar_moretext_gaps,
			 {
				 text:moretext,
				 tooltip:moretexttooltip,
				 icon:listIcon,
				 iconAlign:'left',
				 menu:[
				 {
					text:'复制一行并生成记录',
					tooltip:'复制一行并生成记录',
					glyph:0xf0ea,
					handler:function(){
						copyZxCarApply();
					}
				 },
				 {
					text:'明 细',
					tooltip:'明 细',
					glyph:0xf03b,
					handler:function(){
						detailZxCarApply();
					}
				 },
				 '-',
				 {
					text:'导 出',
					tooltip:'导 出',
					glyph:0xf1c3,
					handler:function(){
						exportZxCarApply(grid,'../zxCarApplyController/exportZxCarApply');
					}
				 },
				 {
					text:'打 印',
					tooltip:'打 印',
					glyph:0xf02f,
					handler:function(){
						printerGrid(grid);
					}
				 },
				 '-',
				 {
					text:'全 选',
					tooltip:'全 选',
					glyph:0xf046,
					handler:function(){selectAll(grid);}
				 },
				 {
					text:'反 选',
					tooltip:'反 选',
					glyph:0xf096,
					handler:function(){unSelectAll(grid);}
				 },
				 '-',
				 {
					text:'刷 新',
					tooltip:'刷 新',
					glyph:0xf021,
					handler:function(){
						grid.getStore().reload();
					}
				 },
				 {
					text:'检 索',
					tooltip:'检 索',
					glyph:0xf002,
					handler:function(){
						search();
					}
				 },
				 {
					text:'重 置',
					tooltip:'重 置',
					glyph:0xf014,
					handler:function(){
						searchForm.reset();
					}
				 }
				 ]
			 }
		],
		bbar:getGridBBar(store),
		listeners:{
			'rowdblclick':function(grid, rowIndex, e){
				detailZxCarApply();
			}
		}
	});
	Ext.create('Ext.Viewport',{
		layout:'border',
		xtype:'viewport',
		items:[searchForm,grid]
	});
	/**调用右键**/
	initRight();
	store.on('beforeload',function(thiz, options){Ext.apply(thiz.proxy.extraParams,getParmas(store,searchForm));});
	/**调用功能权限**/
	xtFunctionStrByCondition(store,grid,contextmenu);
});
/**删除操作**/
function delZxCarApply(){
	var model = grid.getSelectionModel();
	if(model.selected.length == 0){
		msgTishi('请选择后再删除');
		return;
	}
	var id;
	var systemUID;
	for(var i = 0; i < model.selected.length; i++){
		if(null == id){
			id=model.selected.items[i].data.id;
		}else{
			id=id+","+model.selected.items[i].data.id;
		}
		if(systemUID == ""){
			systemUID = model.selected.items[i].data.xt_userinfo_id;
		}else{
			systemUID = systemUID + "," + model.selected.items[i].data.xt_userinfo_id;
		}
	}
	Ext.Msg.confirm('提示','确定删除该行数据？',function(btn){
		if(btn == 'yes'){
			var params = {id:id,systemUID:systemUID};
			ajaxRequest('../zxCarApplyController/delZxCarApply',grid,params,'正在执行删除操作中！请稍后...');
		}
	});
}
/**复制一行并生成记录**/
function copyZxCarApply(){
	var record = grid.getSelectionModel().selected;
	if(record.length == 0){
		msgTishi('请选择要复制的行！');
		return;
	}
	Ext.Msg.confirm('提示','确定要复制一行并生成记录？',function(btn){
		if(btn == 'yes'){
			var params = {id:record.items[0].data.id};
			ajaxRequest('../zxCarApplyController/copyZxCarApply',grid,params,'正在执行复制一行并生成记录！请稍后...');
		}
	});
}
/**导出**/
function exportZxCarApply(grid,url){
	exportExcel(grid,url);
}
/**初始化右键**/
function initRight(){
		var contextmenu = new Ext.menu.Menu({
		id:'theContextMenu',
		items:[{
			text:'添 加',
			glyph:0xf016,
			id:'addZxCarApplyItem',
			handler:function(){addZxCarApply();}
		},{
			text:'编 辑',
			glyph:0xf044,
			id:'updateZxCarApplyItem',
			handler:function(){updateZxCarApply();}
		},{
			text:'删 除',
			glyph:0xf014,
			id:'delZxCarApplyItem',
			handler:function(){delZxCarApply();}
		},'-',{
			text:'复制一行并生成记录',
			glyph:0xf0ea,
			id:'copyZxCarApplyItem',
			handler:function(){copyZxCarApply();}
		},{
			text:'明 细',
			glyph:0xf03b,
			id:'detailZxCarApplyItem',
			handler:function(){detailZxCarApply();}
		},{
			text:'导 出',
			glyph:0xf1c3,
			handler:function(){
				exportZxCarApply(grid,'../zxCarApplyController/exportZxCarApply');
			}
		},{
			text:'打 印',
			glyph:0xf02f,
			handler:function(){printerGrid(grid);}
		},'-',{
			text:'全 选',
			glyph:0xf046,
			handler:function(){selectAll(grid);}
		},{
			text:'反 选',
			glyph:0xf096,
			handler:function(){unSelectAll(grid);}
		},'-',{
			text:'刷 新',
			glyph:0xf021,
			handler:function(){refreshGrid(grid);}
		}]
	});
	initrightgridcontextmenu(grid,contextmenu,['updateZxCarApplyItem','delZxCarApplyItem','copyZxCarApplyItem','detailZxCarApplyItem']);
}
/**查询操作**/
function search(){
	initSearch(store,'../zxCarApplyController/getZxCarApplyListByCondition',searchForm);
}
/**申请**/
function applyZxCar() {
	var record = grid.getSelectionModel().selected;
	if(record.length == 0){
		msgTishi('请选择要申请的行！');
		return;
	}else if(record.length > 1) {
		msgTishi('请不要选择多行！');
		return;
	} 
	var state = record.items[0].data.state;
	if(state != 1){
		msgTishi('请选择待申请状态的审批单');
		return;
	}
	var systemUID;
	if(systemUID == ""){
		systemUID = record.items[0].data.xt_userinfo_id;
	}else{
		systemUID = systemUID + "," + record.items[0].data.xt_userinfo_id;
	}
	Ext.Msg.confirm('提示','确定提出申请该行数据？',function(btn){
		if(btn == 'yes'){
			var id = record.items[0].data.id;
			var params = {id:id};
			ajaxRequest('../zxCarApplyController/applyZxCarApply',grid,params,'正在执行操作中！请稍后...');
		}
	});
}

var lcApprovalWin;
function initLcApprovalWin(id,status){
	if(status == 1){
		msgTishi('未申请的数据无审批记录！');
		return;
	}
	initLcApprovalGrid(id);
	reGetWidthAndHeight();
	lcApprovalWin = Ext.create('Ext.Window',{
		layout:'fit',
		width:clientWidth*0.8,                    
		height:clientHeight*0.8,
		headerPosition:'top',
		maximizable:true,
		minimizable:true,
		animateTarget:document.body,
		plain:true,
		modal:true,
		title:'审批记录',
		items:lcApprovalGrid,
		listeners:{
			minimize:function(win,opts){
				if(!win.collapse()){
					win.collapse();
				}else{
					win.expand();
				}
			}
		}
	});
	lcApprovalWin.show();
}

function initLcApprovalGrid(id){
	lcApprovalStore = getGridJsonStore('../lcApprovalController/getLcApprovalListByCondition?model_biz_id='+id,[]);
	lcApprovalGrid = Ext.create('Ext.grid.Panel',{
		region:'center',
		xtype:'panel',
		store:lcApprovalStore,
		columnLines:true,
		selType:'cellmodel',
		multiSelect:true,
		selType:'checkboxmodel',
		viewConfig:{
			emptyText:'暂无数据',
			stripeRows:true
		},
		loadMask:{
			msg:'正在加载...'
		},
		title:'审批列表',
		columns:[
			{
				header:'序号',
				width:77,
				xtype:'rownumberer'
			},
			{
				header:'批审状态',
				flex:1,
				dataIndex:'lc_status_id',
				renderer:function(value){
					return initComBoData(lc_process_status_combo,value,"value","text");
				}
			},
			{
				header:'审批内容',
				flex:1,
				dataIndex:'lc_approval_remark'
			},
			{
				header:'审批时间',
				flex:1,
				dataIndex:'lc_approval_time'
			},
			{
				header:'批审人',
				flex:1,
				dataIndex:'xt_userinfo_realName'
			}
		],
		bbar:getGridBBar(lcApprovalStore)
	});
}
