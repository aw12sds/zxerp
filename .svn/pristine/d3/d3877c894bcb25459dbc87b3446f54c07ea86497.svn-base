<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  default-autowire=byName">
	<!-- 配置springmvc注解-->
	<mvc:annotation-driven validator="validator">
	    <mvc:message-converters>
	        <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	        	<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>  
	                    <value>applicaiton/javascript;charset=UTF-8</value>  
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
	        </bean>
	        <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
              <property name="supportedMediaTypes">  
                  <list>  
                      <value>application/json;charset=UTF-8</value>  
                      <value>application/x-www-form-urlencoded;charset=UTF-8</value>  
                  </list>  
              </property>  
          	</bean>  
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	    </mvc:message-converters>
	</mvc:annotation-driven>
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	
	<!-- 注解探测器,在JUnit测试的时候需要-->
    <!-- 扫描所有的controller 但是不扫描service,不然事务将没有作用.在JUnit测试的时候不必如此配置 --> 
    <!-- 扫描所有的controller 但是不扫描service-->  
    <context:component-scan base-package="*.*.*web,*.*.*service,*.*.*dao,xtcore.util.quartz.task,jehc.lcmodules.activitiutil,jehc.xtmodules.xtcore.util">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />  
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />  
    </context:component-scan>
    
	<!-- 设置默认的页面  请求转发到login.jsp 
	<mvc:view-controller path="/" view-name="redirect:/login/login.html"/>
	-->
	<!-- 放行静态资源
	<mvc:resources location="/**" mapping="/**"/>
	-->
	<!-- 定义一个视图解析器 -->  
    <bean id="viewResolver"  
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/view/"/>
	    <property name="suffix" value=".jsp"/>
	</bean>

	<!-- 支持文件上传 id="multipartResolver"不能省-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
        <property name="maxUploadSize" value="10485760000" />
        <property name="maxInMemorySize" value="40960" />
	</bean>
	<!-- 按bean的名字去解析  查看rssViewer视图 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
	<!-- 移动端开发 -->
	<!-- 注解移动端 -->
	<context:component-scan base-package="com.phone.*.web" >
    </context:component-scan>
    <!-- 拦截器配置 -->
	<mvc:interceptors>
		<!-- 做互联网前端需要该方法（只要在方法名上加@AuthUneedLogin则表示无需登录或不加也表示无需登录，若加@AuthNeedLogin则表示需要登录才可以访问） -->
		<!-- 目前统一采用该拦截 -->
		<mvc:interceptor>
			<mvc:mapping path="/*/*" />
		    <bean class="jehc.xtmodules.xtcore.interceptor.AuthHandler">
		    </bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>
